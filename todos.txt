investigovat proc - paralelni groundovani neni deterministicke (#forwadchecker runs)
  - a proc je tam rozdil v casech (nova vezre je pomalejsi), kdyz neni v non-parallel verzi
  --> done, nyni je deterministicke
  - casovy rozdil v parallel je asi jen haluz

prechod na maven?
  -  minimalne submitovat do gitu i veci z nbproject/private
  --> done, neni nutne prechazet na maven
  
-----------

centralnim tematem pro urychleni groundovani je nahrazeni objektu Variable pomoc int   --> to nakonec mozna neni azz tak dobry napad, vyjde to zhhruba nastejno
  - scope variable je jen v ramci jednoho pravidla
  - tudiz staci aby pravidlo melo pole bindings
  - promenna je pak jen index (int) do tohohle pole  --> toto je ale zhruba stejne jako odkaz/pointer na Variable

zjistit proc vraci rekurze jenom jeden proof (ale to je ted detail)
  - nejspis jen odrezavala infinite recusrion

urychlit bindovani tim ze termListy budou pole a bindovani se bude provadet zkopirovanim pole int[]        -->jsou to arraylisty a ty jsou v podstate rychle jako pole
  -> predelat Vairable aby bylly jenom int?
  -> a TermList bude jen int[] !
---> NE, promenna musi byt OBJEKT, protoze je sdilena pres N literalu!
  - jeji binding v jendom literalu se musi promitnout v ostatnich
  
  -ale termlist asi muze byt pole...
  
  
---------ANO---------------
  
  navic todo - jeste vice sjednotit SubK a SubL od SubKL a Kappa Lambda do KL
  a nasledne urychlit pocitani hashCode u SubKL
  
  zjednodusit/orezat GroundKL

prekladac do L-K a taky prorezavac/kompresor

urychlit groundovani         --> centralnim prvkem je poradny profiling!
  - cely package template.rules
  - prepsat na int[] co jde    --> tohle asi ne, nebo dopredu vyzkouset rychlost samostatnym testem
  - preskakovat dummy, vytvaret nove GroundLambda az kdyz je potreba
  - urcyhlit clonovani
  - !! aby se bindAll nejelo pres vsechny konstanty ale jen rozumny subset !!
    - tj. aby nejak forwardchecker vraceel tenhle subset
    
  
  kreslitko na samply/grafy?
  - a kappa/lambda aby byly jinym tvarem
  - mozna pridat i barvicky na hrany podle vahy?
  
  automatickou detekci rekurze v templatu a podle ni prepinac
  - stejne tak template constants
  
  
profiling
  JProfiler je super, jeste vyzkouset yourkit (mel by umet sam poradt co optimalizovat)
  
--> Jprofiler + prejit na IntelliJ bude iltimatni kombo!
  
  
- zrusit KL a GroundKL, resp. je sloucit do jednoho literalu?
--> a mit tak jen dve reprezentace : 
    - jednu logickou (puvodni L-K)
      - podobne jako to ma Ondra - bude slouzit jako interface pro ostatni logicke veci a programy a uzivatele
    - a druhou neuralni, ground, ktera podleha specifikaci v paperu
  
---problems

rekurze s holds je extreme pomala i na miniaturnim samplu